#!/bin/bash
source "$SPUB/config/delta-default-opts.sh"

# Description:
# -----------
# Conditionally load search pattern on Delta's pager if a match can be found.
# This has the purpose of always properly setting the navigation pattern for
# diffs, when available.
#
# This script is meant to be used as a pager for Git sub-commands, e.g.:
# ```
#[pager]
#  log = spub-git-delta-navigate
#  diff = spub-git-delta-navigate
#  show = spub-git-delta-navigate
#  reflog = spub-git-delta-navigate
# ```
#
# The Delta repository: <https://github.com/dandavison/delta>.
#
# Parameters: (none).
# ----------

# Amount of lines to read from stdin used to determine if
# loading a pattern into the pager is needed.
SAMPLE_SIZE=30
# Stores the joined sample lines.
SAMPLE_LINES=''
# Pattern used to determine if loading a pattern into the
# pager would be useful.
GIT_DIFF_PATTERN='diff --git a/.* b/.*'

# Pager configuration.
PAGER_WITHOUT_PATTERN='less -iRXFM'
PAGER_WITH_PATTERN="less -iRXFM --pattern \
  'commit [a-z0-9]{40}|Δ|•|added: |removed: '"

# Enable debug logging.
DEBUG_ENABLED=0

function echo_stdin_with_sample {
  echo "$SAMPLE_LINES" | gawk '{
    # Split properly into lines, allowing actual
    # newline escape sequences to be in the output.
    split($0, lines, /~@~NEWLINE~@~/)
    # Print the lines.
    for (line in lines) {
      print lines[line]
    }
  }'
  while IFS='$\n' read -r line; do
    echo "$line"
  done
}

function execute_pipeline {
  local current_line_number=1
  local further_stdin_exists=0

  # Joins sample lines into a variable.
  while IFS='$\n' read -r line; do
    if [[ $current_line_number -lt $SAMPLE_SIZE ]]; then
      SAMPLE_LINES="$SAMPLE_LINES$line~@~NEWLINE~@~"
    else
      SAMPLE_LINES="$SAMPLE_LINES$line"
      further_stdin_exists=1
      break
    fi
    current_line_number=$(( $current_line_number + 1 ))
  done

  # Determine if stdin is navigable based on the sample.
  local stdin_is_navigable=$(echo -e "$SAMPLE_LINES" | grep "$GIT_DIFF_PATTERN")

  # Decide if less should have a search pattern preloaded.
  if [[ -n "$stdin_is_navigable" && $further_stdin_exists -eq 1 ]]; then
    test $DEBUG_ENABLED -eq 1 && SAMPLE_LINES="YES\n${SAMPLE_LINES}"
    local pager="$PAGER_WITH_PATTERN"
  else
    test $DEBUG_ENABLED -eq 1 && SAMPLE_LINES="NO\n${SAMPLE_LINES}"
    # Remove trailing newline if only the sample lines will be printed.
    if [[ $further_stdin_exists -eq 0 ]]; then
      SAMPLE_LINES=$(printf "$SAMPLE_LINES" | sed 's/~@~NEWLINE~@~$//')
    fi
    local pager="$PAGER_WITHOUT_PATTERN"
  fi

  # Execute pipeline.
  echo_stdin_with_sample \
    | delta "${DELTA_DEFAULT_OPTS[@]}" --pager="$pager"
}

execute_pipeline

