#!/bin/bash

# Description:
# -----------
# Conditionally load search pattern on Delta's pager if a match can be found.
# This has the purpose of always properly setting the navigation pattern for
# diffs, when available.
#
# This script is meant to be used as a pager for Git sub-commands, e.g.:
# ```
#[pager]
#  log = spub-git-delta-navigate
#  diff = spub-git-delta-navigate
#  show = spub-git-delta-navigate
#  reflog = spub-git-delta-navigate
# ```
#
# The Delta repository: <https://github.com/dandavison/delta>.
#
# Parameters: (none).
# ----------

source "$SPUB/config/delta-default-opts.sh"
source "$SPUB/utils/commons.sh"

# Amount of lines to read from stdin used to determine if
# loading a pattern into the pager is needed. This should
# be set to the amount of lines of a single screen.
SAMPLE_SIZE=$(tput lines)
# Array storing the joined sample lines.
SAMPLE_LINES=()
# Pattern used to determine if loading a pattern into the
# pager would be useful.
GIT_FULL_COMMIT_HASH_PATTERN='commit [a-z0-9]{40}'
GIT_DIFF_HEADER_PATTERN='diff --git a/.* b/.*'
GIT_NAVIGATION_PATTERN="\
^$GIT_FULL_COMMIT_HASH_PATTERN|\
^$GIT_DIFF_HEADER_PATTERN"

# Pager configuration.
DELTA_NAVIGATION_PATTERN="\
^$GIT_FULL_COMMIT_HASH_PATTERN|\
^$DELTA_FILE_ADDED_LABEL|\
^$DELTA_FILE_COPIED_LABEL|\
^$DELTA_FILE_MODIFIED_LABEL|\
^$DELTA_FILE_REMOVED_LABEL|\
^$DELTA_FILE_RENAMED_LABEL|\
^$DELTA_HUNK_LABEL"
PAGER_NO_PATTERN="less -iRXFM -P'MDisplayed lines\: %lt-%lb'"
PAGER_YES_PATTERN="$PAGER_NO_PATTERN -p '$DELTA_NAVIGATION_PATTERN'"

# Enable debug logging.
DEBUG_ENABLED=0
DEBUG_LOGS=()

function echo_sample_and_remaining_stdin {
  # Print debug logs.
  if [[ $DEBUG_ENABLED -eq 1 ]]; then
    for i in ${!DEBUG_LOGS[@]}; do
      echo "${DEBUG_LOGS[$i]}"
    done
  fi
  # Print sample lines.
  for i in ${!SAMPLE_LINES[@]}; do
    echo "${SAMPLE_LINES[$i]}"
  done
  # Print any remaining stdin.
  while IFS='$\n' read -r line; do
    echo "$line"
  done
}

function execute_pipeline {
  local sample_lines_concatenated=''
  local current_line_number=1
  local eof_reached=1

  # Join sample lines.
  while IFS='$\n' read -r line; do
    SAMPLE_LINES+=("$line")
    sample_lines_concatenated="$sample_lines_concatenated$line\n"
    if [[ $current_line_number -eq $SAMPLE_SIZE ]]; then
      eof_reached=0
      break
    fi
    current_line_number=$(( $current_line_number + 1 ))
  done
  sample_lines_concatenated=$(echo -e "$sample_lines_concatenated" \
    | strip_ansi_colors)

  # Determine if stdin is navigable based on the sample.
  local stdin_is_navigable=$(echo -e "$sample_lines_concatenated" \
    | grep -E "$GIT_NAVIGATION_PATTERN")

  # Decide if less should have a search pattern loaded.
  if [[ -n "$stdin_is_navigable" && $eof_reached -eq 0 ]]; then
    DEBUG_LOGS+=('DEBUG: YES - stdin is navigable and would benefit from it.')
    local pager="$PAGER_YES_PATTERN"
  else
    DEBUG_LOGS+=('DEBUG: NO - stdin is not navigable or would not benefit from it.')
    local pager="$PAGER_NO_PATTERN"
  fi

  test $DEBUG_ENABLED -eq 1 && DEBUG_LOGS+=(\
  'DEBUG: --- START - Sample lines ---' \
  "$sample_lines_concatenated" \
  'DEBUG: --- END - Sample lines ---')

  # Execute pipeline.
  echo_sample_and_remaining_stdin \
    | delta "${DELTA_DEFAULT_OPTS[@]}" --pager="$pager"
}

execute_pipeline

